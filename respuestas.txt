18: devuelve literalmente lo que le pasamos al metodo puts
21: las comillas dobles ejecutan la tabulacion y el salto de linea mientras que las simples muestran literalmente los caracteres especificados
    escapando las barras.
22: a) %q hace exactamente que las comillas simples.b) 'a','b','c' | c) "hello world\\n"
23: a) %Q hace exactamente que las comillas dobles.b) "a","b","c" | c) "hello world"
24: --4--
    --2--
    
25: --#{a}--
    --#{b}--
    
26: a) he  b) o c) hello
27: hello world
28: ...
29: 2 2 2
30: ["this", "is", "a", "test"]
31: ["\\t", "\\n"] Hace las veces de comillas simple pero separandolo en una array
32: ["\t", "\n"] Hace las veces de comillas dobles pero separandolo en una array
33: nils contiene un array con 3 posiciones inicializadas a nil.
34: zeros contiene un array de 3 posiciones inicializadas a 0.
35: Una Array exacto a x --> [[1, 2], [3, 4]].
36: [0, 2, 4].

37: a) ["b"]
    b) ["d", "e"]
    c) ["a", "b", "c"]
    d) ["a"]
    e) ["d", "e"]
    
38: a) ["A", "B", "c", "d", "e"]
    b) ["A", "B", "C", "D", "E"]
    c) [1, 2, 3, "A", "B", "C", "D", "E"]
    d) [3, "A", "B", "C", "D", "E"]
    e) [3, "A", "B", "C", "D", "Z"]
    f) [3, "A", "B", "C", nil]
    
39: a) [1, 2, 3]
    b) [1, 2, 3, 4, 5]
    c) [1, 2, 3, 4, 5, [6, 7, 8]]
    d) Error estas sumando al array un fixnum
    
40: a) ["a", "b", "c", "b", "a"]
    b) ["a", "a"]